#include <iostream>
#include <algorithm>
#include <queue>
#include <string.h>
#define MAX 987654321
using namespace std;
int arr[127][127], n, cnt = 0;
int dist[127][127];
pair<int, int> pp, p[4] = { {1,0}, {0,1}, {-1,0}, {0,-1} };
queue <pair<int, int> > q;
void bfs() {
	dist[1][1] = arr[1][1];
	while (q.empty() != true) {
		pp = q.front();
		q.pop();
		for (int i = 0;i < 4;i++) {
			if (dist[pp.first + p[i].first][pp.second + p[i].second] > dist[pp.first][pp.second]
				+arr[pp.first + p[i].first][pp.second + p[i].second]) {
				q.push({ pp.first + p[i].first,pp.second + p[i].second });
				dist[pp.first + p[i].first][pp.second + p[i].second] = dist[pp.first][pp.second]
					+ arr[pp.first + p[i].first][pp.second + p[i].second];
			}
		}
	}
	cout << "Problem " << ++cnt << ": " << dist[n][n] << '\n';
	return;
}
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	while (true) {
		cin >> n;
		if (n == 0) break;
		for (int i = 0;i <= n + 1;i++)for (int j = 0;j <= n + 1;j++) {
			arr[i][j] = MAX;
			dist[i][j] = MAX;
		}
		for (int i = 1;i <= n;i++) for (int j = 1;j <= n;j++) cin >> arr[i][j];
		q.push({ 1,1 });
		bfs();
	}
	return 0;
}