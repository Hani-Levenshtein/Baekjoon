#include <iostream>
#include <utility>
#include <vector>
#include <algorithm>
using namespace std;
vector<int> num;
void print(vector <int>& v) {
	for (int i = 0;i < v.size();i++) cout << v[i] << " ";
	cout << '\n';
}

void dfs(int in, int out, vector <int>&v) {
	if (v.size() == out) {
		print(v);
		return;
	}
	else {
		for (int i = 0;i < in;i++) {
	
			v.push_back(num[i]);
			dfs(in, out, v);
			v.pop_back();
		}
	}
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int in, out, p;
	cin >> in >> out;
	vector<int>v;
	for (int i = 0;i < in;i++) {
		cin >> p;
		num.push_back(p);
	}

	sort(num.begin(),num.end());
	num.erase(unique(num.begin(), num.end()),num.end());
	for (int i = 0;i < v.size();i++) cout << num[i] << '\n';
	dfs(num.size(), out, v);
	return 0;
}
