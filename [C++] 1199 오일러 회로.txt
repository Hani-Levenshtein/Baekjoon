#include <iostream>
#include <algorithm>
#include <queue>
#include <string.h>
#include <limits.h>
#include <vector>
#include <math.h>
#include <stack>
#include <bitset>
#include <string>
#include <set>
#define all(v) v.begin(), v.end()
#define pii pair<int,int>
#define make_unique(v) v.erase(unique(v.begin(), v.end()), v.end())
typedef long long ll;
using namespace std;

int  n, m;
int arr[1002][1002];

void dfs(int v) {
	for (int i = 1;i <= n;i++) {
		while (arr[v][i] > 0) {
			arr[v][i]--;
			arr[i][v]--;	
			dfs(i);
		}
	}
	cout << v << " ";
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n;
	bool chk = true;
	for (int i = 1;i <= n;i++) {
		int sum = 0;
		for (int j = 1;j <= n;j++) {
			cin >> arr[i][j];
			sum += arr[i][j];
		}
		if (sum % 2 == 1) chk = false;
	}
	if (chk == false) cout << "-1";
	else dfs(1);
	return 0;
}