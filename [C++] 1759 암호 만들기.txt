#include <iostream>
#include <algorithm>
#include <queue>
#include <string>
#include <limits.h>
#include <vector>
#include <math.h>
#include <stack>
#include <bitset>
#include <string.h>
#include <set>
#include <map>
#include <unordered_map>
#include <sstream>
#include <cstdlib>
#include <cassert>
#define all(v) v.begin(), v.end()
#define pii pair<int, int>
#define pli pair<ll, int>
#define make_unique(v) sort(all(v)), v.erase(unique(all(v)), v.end())
typedef long long ll;
using namespace std;

int n, m;
vector<char> substring;
void getPassword(int subPassword, string password, int con, int vow)
{
    if (password.size() == n){
        if (con < 2 || vow < 1) return;
        cout << password << '\n';
    }

    for (int ith = subPassword; ith < m; ith++){
        if (substring[ith] == 'a' || substring[ith] == 'e' || substring[ith] == 'i' || substring[ith] == 'o' || substring[ith] == 'u')
            getPassword(ith + 1, password + substring[ith], con, vow + 1);
        else
            getPassword(ith + 1, password + substring[ith], con + 1, vow);
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cin >> n >> m;
    substring.resize(m);
    for (int i = 0; i < m; i++) cin >> substring[i];
    sort(all(substring));
    getPassword(0, "", 0, 0);

    return 0;
}