#include <iostream>
#include <utility>
#include <vector>
#include <algorithm>
#include <queue>
using namespace std;
int arr[8];
vector<int> v;
int n, m,top=0;

void dfs(int j,int in,int out) {
	if (in == out) {
		for (int i = 0;i < v.size();i++) cout << v[i] << " ";
		cout << '\n';
		return;
	}
	for (int i = j;i < n;i++) {
		if (arr[i] > top) {
			v.push_back(arr[i]);
			dfs(i + 1, in + 1, out);
			top = arr[i];
			v.pop_back();
		}
	}
}
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n >> m;
	for (int i = 0;i < n;i++) cin >> arr[i];
	sort(arr,arr+n);
	dfs(0,0, m);
	return 0;
}
